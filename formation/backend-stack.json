{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "09c44c6c-5566-4dd4-a91c-6a872e0ea03e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 340,
                    "y": 150
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "4f05693d-f3e3-4905-84cb-6ec35fd11c82"
                ],
                "dependson": [
                    "28dd2f7d-0608-4534-9696-93981074c94f"
                ]
            },
            "a62de25c-78aa-4666-9eb0-94abdb5f6d61": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 480,
                    "y": 170
                },
                "z": 0,
                "embeds": []
            },
            "e5e108ff-95df-40b5-ba29-56103e7954e3": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 150,
                    "y": 150
                },
                "z": 0,
                "embeds": []
            },
            "4f05693d-f3e3-4905-84cb-6ec35fd11c82": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 480,
                    "y": 90
                },
                "z": 0,
                "embeds": []
            },
            "28dd2f7d-0608-4534-9696-93981074c94f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 340,
                    "y": 260
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "09c44c6c-5566-4dd4-a91c-6a872e0ea03e"
                ]
            },
            "b11be761-399e-4a4e-80a7-00d23c135558": {
                "source": {
                    "id": "a62de25c-78aa-4666-9eb0-94abdb5f6d61"
                },
                "target": {
                    "id": "09c44c6c-5566-4dd4-a91c-6a872e0ea03e"
                },
                "z": 0
            }
        }
    },
    "Resources": {
        "BackendInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-0d5eff06f840b45e9",
                "InstanceType": "t2.micro",
                "KeyName": "defaultKey",
                "SecurityGroups": [
                    {
                        "Ref": "BackendInstanceSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "# create mount point directory\n",
                                "mkdir /mnt/xvdh\n",
                                "# create ext4 filesystem on new volume\n",
                                "mkfs -t ext4 /dev/xvdh\n",
                                "# add an entry to fstab to mount volume during boot\n",
                                "echo \"/dev/xvdh       /mnt/xvdh   ext4    defaults,nofail 0       2\" >> /etc/fstab\n",
                                "# mount the volume on current boot\n",
                                "mount -a\n",
                                "# Get the latest CloudFormation package\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# Start cfn-init\n",
                                {
                                    "Fn::Sub": "/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BackendInstance --configsets default --region ${AWS::Region} \n"
                                },
                                "# Start up the cfn-hup daemon to listen for changes to the Web Server metadata\n",
                                "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",
                                "# All done so signal success\n",
                                {
                                    "Fn::Sub": "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BackendInstance --region ${AWS::Region} \n"
                                }
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "default": [
                            "cloud-init",
                            "install_docker",
                            "download_compose",
                            "install_compose"
                        ]
                    },
                    "cloud-init": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.BackendInstance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r BackendInstance ",
                                            " --region     ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install_docker": {
                        "packages": {
                            "yum": {
                                "docker": []
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "docker": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        },
                        "commands": {
                            "docker_for_ec2_user": {
                                "command": "usermod -G docker ec2-user"
                            }
                        }
                    },
                    "download_compose": {
                        "commands": {
                            "compose_for_ec2_user": {
                                "command": "curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose"
                            }
                        }
                    },
                    "install_compose": {
                        "commands": {
                            "compose_chmod": {
                                "command": "chmod +x /usr/local/bin/docker-compose;ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose"
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "09c44c6c-5566-4dd4-a91c-6a872e0ea03e"
                }
            }
        },
        "DataVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "8",
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "BackendInstance",
                        "AvailabilityZone"
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a62de25c-78aa-4666-9eb0-94abdb5f6d61"
                }
            }
        },
        "DataMountpoint": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "InstanceId": {
                    "Ref": "BackendInstance"
                },
                "VolumeId": {
                    "Ref": "DataVolume"
                },
                "Device": "/dev/sdh"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b11be761-399e-4a4e-80a7-00d23c135558"
                }
            }
        },
        "ApiRoute": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {
                    "Ref": "HostedZoneId"
                },
                "Name": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "ScopeName"
                                        },
                                        "api"
                                    ]
                                ]
                            },
                            {
                                "Ref": "ApexDomainName"
                            }
                        ]
                    ]
                },
                "TTL": "300",
                "Type": "A",
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "BackendInstance",
                            "PublicIp"
                        ]
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e5e108ff-95df-40b5-ba29-56103e7954e3"
                }
            }
        },
        "BackendInstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            "backend-security-group",
                            {
                                "Ref": "ScopeName"
                            }
                        ]
                    ]
                },
                "GroupDescription": "Allow HTTP/HTTPS and SSH inbound and outbound traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4f05693d-f3e3-4905-84cb-6ec35fd11c82"
                }
            }
        },
        "BackendPublicIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "BackendInstance"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "webapp-eip",
                                    {
                                        "Ref": "ScopeName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "28dd2f7d-0608-4534-9696-93981074c94f"
                }
            }
        }
    },
    "Parameters": {
        "ScopeName": {
            "Description": "Name of the current scope (<<ScopeName>>.ua-wck.com)",
            "Type": "String"
        },
        "ScopeVersion": {
            "Description": "Published version for the scope",
            "Type": "String"
        },
        "ApexDomainName": {
            "Description": "Apex domain (always ua-wck.com)",
            "Type": "String"
        },
        "AcmCertificate": {
            "AllowedPattern": "^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$",
            "Description": "[ Optional ] The AWS Certification Manager certificate ARN for the CloudFront distribution certificate - this certificate should be created in the us-east-1 (N. Virginia) region and must reference the WordPress domain name you use below.",
            "Type": "String"
        },
        "HostedZoneId": {
            "Description": "Hosted Zone ID for ua-wck.com",
            "Type": "String"
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Description": "Application URL",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "BackendInstance",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        },
        "PublicIP": {
            "Description": "BackendInstance Public IP",
            "Value": {
                "Fn::GetAtt": [
                    "BackendInstance",
                    "PublicIp"
                ]
            }
        }
    }
}